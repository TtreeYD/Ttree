<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.yedam.smartree.eqm.mapper.EqmInspMapper">
  <!-- 설비점검 전체조회 -->
  	<select id="selectEqmInspList" resultType="EqmInspVO">
  	    SELECT e.eqm_code,e.eqm_name,i.insp_code,i.insp_manager,case when insp_judg ='Y' then '적합' else '부적합' end insp_judg ,i.repair_date,i.RECENT_INSP_DATE,i.NEXT_INSP_DATE,i.insp_dt,i.action_dt
		FROM eqm e join EQM_INSP i
  		  				ON e.eqm_code = i.eqm_code
  	 					 
  		ORDER BY insp_code desc
  	</select>
  	<!-- 판정여부 조회 -->
  	<select id="selectEqmInspInspJudgList" resultType="EqmInspVO">
  	 SELECT e.eqm_code,e.eqm_name,i.insp_manager, case when insp_judg ='Y' then '적합' else '부적합' end insp_judg,i.repair_date,i.RECENT_INSP_DATE,i.NEXT_INSP_DATE,i.insp_dt,i.action_dt
     FROM eqm e join EQM_INSP i
  		  			ON e.eqm_code = i.eqm_code
  	 	<where>
  			<if test="inspJudg != null and !inspJudg.equals('')">
  				insp_judg = #{inspJudg}	
  			</if>
  		</where>  		
  	 					 
  	ORDER BY eqm_code
  	</select>
  	<!-- 설비점검이름으로 검색 -->
  	 <select id="searchEqmInsp" resultType="EqmInspVO">
  	 SELECT e.eqm_code,e.eqm_name,i.insp_manager, case when insp_judg ='Y' then '적합' else '부적합' end insp_judg ,i.repair_date,i.RECENT_INSP_DATE,i.NEXT_INSP_DATE,i.insp_dt,i.action_dt
     FROM eqm e join EQM_INSP i
  		  			ON e.eqm_code = i.eqm_code
  		<where>
  			<if test="eqmName != null and !eqmName.equals('')">
  				eqm_name LIKE '%'||#{eqmName}||'%'
  			</if>
  		</where>  	
  	 					 
  	ORDER BY eqm_code
  	</select>
  	
  	<!-- 설비점검 단건조회  -->
  	<select id= "selectEqmInsp" resultType="EqmInspVO">
  		select INSP_CODE,RECENT_INSP_DATE,REPAIR_DATE,INSP_DT,ACTION_DT,INSP_JUDG,NEXT_INSP_DATE,REGISTER_DATE,INSP_MANAGER
  		from EQM_INSP
  		where INSP_CODE = #{inspCode}
  	</select>
  	
  	<!-- 설비점검 등록 -->
  	<insert id="insertEqmInsp" parameterType="EqmInspVO">
  		<selectKey keyProperty="inspCode" resultType="String" order="BEFORE">
  			select 'ein' || LPAD(eqm_insp_code_seq.NEXTVAL, 7, '0') as inspCode from dual
  	    </selectKey>
  	    INSERT INTO EQM_INSP
  			 ( 
  			    INSP_CODE
  			   ,RECENT_INSP_DATE
  			   ,REPAIR_DATE
  		  	   ,INSP_DT
  			   ,ACTION_DT
  			   ,INSP_JUDG
  			   ,NEXT_INSP_DATE
  			   ,REGISTER_DATE
  			   ,INSP_MANAGER
  			   ,EQM_CODE
  			   ,NOPER_CODE
  			)
   values
           ( 
   				#{inspCode}
   			   ,#{recentInspDate}
   			   ,#{repairDate}
   			   ,#{inspDt}
   			   ,#{actionDt}
   			   ,#{inspJudg}
   			   ,#{nextInspDate}
   			   ,#{registerDate}
   			   ,#{inspManager}   
   			   ,#{eqmCode} 
   			   ,#{noperCode} 
           )
  	</insert>
  	
  	
  	<!-- 비가동 -->
  	
  	  	<!-- 비가동 등록 -->
  	<insert id="insertEqmNoper" parameterType="EqmNoperVO">
  		<selectKey keyProperty="noperCode" resultType="String" order="BEFORE">
  			select 'eno' || LPAD(noper_code_seq.NEXTVAL, 7, '0') as noperCode from dual
  	    </selectKey>
  	    INSERT INTO EQM_NOPER
  			 ( 
  			    NOPER_CODE
				,REASON_KND
				,REASON
				,NOPER_SDATE
				,NOPER_LDATE
				,NOPER_MANAGER
				,INSP_ICHECK
				,EQM_CODE
  			)
   values
           ( 
   				#{noperCode}
   			   ,#{reasonKnd}
   			   ,#{reason}
   			   ,#{noperSdate}
   			   ,#{noperLdate}
   			   ,#{noperManager}
   			   ,#{inspIcheck}
   			   ,#{eqmCode}   
           )
  	</insert>
  	<!-- 비가동 설비 조회 -->
  	<select id ="selectEqmNoper" resultType="EqmNoperVO">
  		select n.*,e.eqm_name
  		from EQM_NOPER n join eqm e 
  						 ON n.eqm_code = e.eqm_code
  		where e.eqm_state = 'E' and n.INSP_ICHECK != 'Y'
  	</select>
  	
  	  	<!--비가동 설비점검이름으로 검색 -->
  	 <select id="searchEqmNoper" resultType="EqmNoperVO">
  	 	select n.*,e.eqm_name
  		from EQM_NOPER n join eqm e 
  						 ON n.eqm_code = e.eqm_code
  		<where>
  			<if test="eqmName != null and !eqmName.equals('')">
  				eqm_name LIKE '%'||#{eqmName}||'%'
  			</if>
  			and e.eqm_state = 'E'
  			and n.INSP_ICHECK != 'Y'
  		</where>  	
  	 					 
  	ORDER BY n.NOPER_CODE
  	</select>
  	
  	
  	  	<!-- 비가동 설비조회 단건조회-->
  	<select id="selectEqmNoperCode" resultType="EqmNoperVO">
		 select          n.NOPER_CODE
						,n.REASON_KND
						,n.REASON
						,n.NOPER_SDATE
						,n.NOPER_LDATE
						,n.NOPER_MANAGER
						,n.INSP_ICHECK
						,n.EQM_CODE
						,e.eqm_name
						,e.eqm_state
		from  eqm_noper n join  EQM e
		                 on  n.eqm_code= e.eqm_code
		  	           
  	 	 <where>
  	  		<if test="eqmState != null and !eqmState.equals('')">
  	 	 		eqm_state = #{eqmState}
  	 	 	</if>
  	 	 	and n.eqm_code=#{eqmCode} 
  	 	 	and n.INSP_ICHECK != 'Y'
  		  </where>

  	</select>
  	
  	<!-- 비가동 설비조회 수정 -->
  	<update id="updateEqmNoper" parameterType="EqmNoperVO" >
  		update eqm_noper
  		<set>
  			<if test = "reasonKnd != null and !reasonKnd.equals('')">
  				REASON_KND = #{reasonKnd},
  			</if>
  			<if test = "reason != null and !reason.equals('')">
  				REASON = #{reason},
  			</if>
  			<if test = "noperSdate != null and !noperSdate.equals('')">
  				NOPER_SDATE = #{noperSdate},
  			</if>
  			<if test = "noperLdate != null and !noperLdate.equals('')">
  				NOPER_LDATE = #{noperLdate},
  			</if>
  			<if test = "noperManager != null and !noperManager.equals('')">
  				NOPER_MANAGER = #{noperManager},
  			</if>
  			<if test = "inspIcheck != null and !inspIcheck.equals('')">
  				INSP_ICHECK = #{inspIcheck},
  			</if>
  		</set>
  		 where NOPER_CODE = #{noperCode}
  	</update>
  	
  </mapper>