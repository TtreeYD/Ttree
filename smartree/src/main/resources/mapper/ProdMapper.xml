<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.yedam.smartree.prod.mapper.ProdMapper">
  	<select id="selectProdList" resultType="ProdVO">
  		select *
  		
		  from dt_prod_plan dtp 
		  join prod_plan p     on dtp.prod_plan_code = p.prod_plan_code
		  join  prdt_table pt  on dtp.prdt_code = pt.prdt_code
		  order by p.prod_plan_date DESC
		  
  	</select>
  	
  	<select id="selectAllOrderAndPrdt" resultType="BusinessVO">
  		select o.order_code , 
  		       o.order_date , 
  		       o.dod_date , 
  		       o.dod_state , 
  		       o.order_manager,
  		       b.bp_code , 
  		       b.bp_name 
  		from orders o join business_partner b
 		  				on o.bp_code = b.bp_code
	    where o.prod_plan_yn = 'n'
	    
  	</select>
  	
  	
	<insert id="insertProdPlan" parameterType="ProdVO" statementType="CALLABLE">
    <selectKey keyProperty="prodPlanCode" resultType="String" order="BEFORE">
        select 'PPN' || LPAD(prod_plan_seq.NEXTVAL, 7, '0') as prodPlanCode from dual
    </selectKey>
    {call in_prod_up_order(
        #{orderCode},
        #{prodPlanCode},
        #{prodPlanName},
        #{prodPlanDate},
        #{prodName},
        #{prodPlanSdate},
        #{prodPlanEdate},
        #{result , mode=OUT, jdbcType=VARCHAR, javaType=string}
    )}
	</insert>
	
	<insert id="insertDtProdPlan" parameterType="ProdVO">
	    insert into dt_prod_plan 
	    values(
	        'PPD' || LPAD(dt_prod_plan_seq.NEXTVAL, 7, '0'),
	        #{prodPlanCode},
	        #{prdtCode},
	        #{prodPlanCnt},
	        #{prodPlanNote},
	        #{prodRank}
	    )
	</insert> 
	 <insert id="insertAndUpdateDtProd" parameterType="ProdVO">
		{call in_dtProd_up_dtProd(
			#{prodPlanCode},
			#{prdtCode},
			#{prodPlanCnt},
			#{prodPlanNote},
			#{prodRank},
			#{dtProdPlanCode},
			#{prodPlanName},
  		    #{prodName},
  		    #{prodPlanDate},
  		    #{prodPlanSdate},
  		    #{prodPlanEdate}
		)}
	</insert> 
  	<select id="searchProdPlan" resultType="ProdVO">
  		select *
		  from dt_prod_plan dtp join prod_plan p 
		                          on dtp.prod_plan_code = p.prod_plan_code
		                        join prdt_table pt
		                          on dtp.prdt_code = pt.prdt_code
		<where>
			<if test="dtProdPlanCode != null and !dtProdPlanCode.equals('')">
				dtp.dt_prod_plan_code like '%' || #{dtProdPlanCode} || '%'
			</if> 
			<if test="prdtName != null and !prdtName.equals('')">
				or pt.prdt_name like '%' || #{prdtName} || '%'
			</if>
		</where>
  	</select>
  	
  	<select id="selectProd" resultType="ProdVO">
  		select prod_plan_code, prod_plan_name, prod_name, prod_plan_date, order_code
  		from prod_plan
  		where prod_inst_yn = 'n'
  		order by prod_plan_date desc
  	</select>
  	<!-- 생산지시관리 - 생산지시 modal -->
  	<select id="selectProdInst" resultType="ProdVO">
  		select prod_inst_name
  			  ,prod_plan_code
  			  ,prod_inst_code
  		      ,prod_inst_manager
  		      ,prod_inst_date
  		      ,prod_inst_sdate
  		      ,prod_inst_edate
		  from prod_inst
		  order by prod_inst_date desc
  	</select>
  	
  	<select id="selectProdListView" resultType="ProdVO">
  		SELECT dtp.dt_prod_plan_code, dtp.prod_plan_cnt, dtp.prod_rank, dtp.prod_plan_note
  		     , p.prod_plan_code , p.prod_plan_name, p.prod_name, p.prod_plan_date, p.prod_plan_sdate, p.prod_plan_edate
  		     , pt.prdt_name , pt.prdt_code
		<if test="orderCode != null and !orderCode.equals('')">
	  		, nvl(dto.order_dt_cnt, 0) order_dt_cnt
        </if>
		FROM dt_prod_plan dtp JOIN prod_plan p 
		ON dtp.prod_plan_code = p.prod_plan_code
		JOIN  prdt_table pt 
		ON dtp.prdt_code = pt.prdt_code
		<if test="orderCode != null and !orderCode.equals('')">
	        LEFT OUTER JOIN dt_order dto
	        ON p.order_code = dto.order_code AND dtp.prdt_code = dto.prdt_code
        </if>
		WHERE p.prod_plan_code = #{prodPlanCode}
  	</select>
  	
  	<update id="updateProd" parameterType="ProdVO">
  		update prod_plan
  		set prod_plan_name = #{prodPlanName},
  		    prod_name = #{prodName},
  		    prod_plan_date = #{prodPlanDate},
  		    prod_plan_sdate = #{prodPlanSdate},
  		    prod_plan_edate = #{prodPlanEdate}
  		where prod_plan_code = #{prodPlanCode}
  	</update>
  	
  	<update id="updateDtProd" parameterType="ProdVO">
  		update dt_prod_plan
  		set prod_plan_cnt = #{prodPlanCnt},
  		    prod_rank = #{prodRank},
  		    prod_plan_note = #{prodPlanNote}
  		where dt_prod_plan_code = #{dtProdPlanCode}
  	</update>
  	
  	<delete id="deleteProd" parameterType="ProdVO">
  		delete from prod_plan
  		where prod_plan_code = #{prodPlanCode}
  	</delete>
  	
  	<delete id="deleteDtProd" parameterType="ProdVO">
  		delete from dt_prod_plan
  		where dt_prod_plan_code = #{dtProdPlanCode}
  	</delete>
  	
  	<select id="selectPrdt" resultType="PrdtProdVO">
  		select p.prod_plan_code , pt.prdt_code , pt.prdt_name , pt.prdt_type 
  		from prdt_table pt join dt_prod_plan p
  		                     on pt.prdt_code = p.prdt_code
  		<where>
  			<if test="prdtCode != null">
  				pt.prdt_code = #{prdtCode}
  			</if>
  			<if test="prodPlanCode != null and !prodPlanCode.equals('')">
  				AND p.prod_plan_code = #{prodPlanCode}
  			</if>
  		</where>
  	</select>
  	
  	<select id="selectGetProd" resultType="ProdVO">
		select p.prod_plan_name, prdt.prdt_name ,dtp.prod_plan_cnt, p.prod_plan_code, prdt.prdt_code
		from prod_plan p join dt_prod_plan dtp
                 on p.prod_plan_code = dtp.prod_plan_code
                 join prdt_table prdt
                 on dtp.prdt_code = prdt.prdt_code
		where p.prod_plan_code = #{prodPlanCode}
  	</select>
  	
  	<select id="selectGetProdInst" resultType="ProdVO">
		select p.prod_plan_name, 
		       prdt.prdt_name,
		       dtp.prod_plan_cnt, 
		       p.prod_plan_code, 
		       prdt.prdt_code, 
		       dpi.prod_inst_cnt,
		       dpi.prod_inst_yn, 
		       dpi.prod_inst_rank,
		       dtp.prod_plan_cnt - dpi.prod_inst_cnt as prod_inst_incomp_cnt,
		       pi.prod_inst_name,
		       pi.prod_inst_manager,
		       pi.prod_inst_date,
		       pi.prod_inst_sdate,
		       pi.prod_inst_edate,
		       pi.prod_inst_code,
		       dpi.dt_prod_inst_code
		from prod_plan p join dt_prod_plan dtp
				         on p.prod_plan_code = dtp.prod_plan_code
				         join prdt_table prdt
				         on dtp.prdt_code = prdt.prdt_code
				         join prod_inst pi  
				         on pi.prod_plan_code  = p.prod_plan_code
				         join dt_prod_inst dpi
				         on pi.prod_inst_code = dpi.prod_inst_code and dpi.prdt_code = dtp.prdt_code
		where pi.prod_plan_code = #{prodPlanCode}
		  and dpi.prod_inst_yn = 'n'
  	</select>
  	<!-- 생산지시등록 -->
	<insert id="insertProdInst" parameterType="ProdVO" statementType="CALLABLE">
    <selectKey keyProperty="prodInstCode" resultType="String" order="BEFORE">
        select 'PIN' || LPAD(prod_inst_seq.NEXTVAL, 7, '0') as prodInstCode from dual
    </selectKey>
    {call in_inst_up_plan(
    	#{prodInstCode},
    	#{prodPlanCode},
        #{prodInstName},
        #{prodInstManager},
       	#{prodInstDate},
        #{prodInstSdate},
        #{prodInstEdate}
    )}
	</insert>
	<!-- 생산지시상세등록 -->
	<insert id="insertDtProdInst" parameterType="ProdVO">
		 <selectKey keyProperty="dtProdInstCode" resultType="String" order="BEFORE">
        	select 'PID' || LPAD(dt_prod_inst_seq.NEXTVAL, 7, '0') as dtProdInstCode from dual
    	</selectKey>
	    insert into dt_prod_inst (dt_prod_inst_code, prod_inst_rank, prod_inst_cnt, prod_inst_code, prdt_code)
	    values(
	        #{dtProdInstCode},
	        #{prodInstRank},
	        #{prodInstCnt},
	        #{prodInstCode},
	        #{prdtCode}
	    )
	</insert> 
	<!-- 공정흐름도 등록 -->
	<insert id="insertProcess" parameterType="ProdVO">
		{call insert_process(
			#{dtProdInstCode},
			#{prdtCode},
			#{prodInstCnt}
		)}
	</insert>

	<update id="updateProdInst" parameterType="ProdVO">
  		update prod_inst
  		set prod_inst_name = #{prodInstName},
  		    prod_inst_manager = #{prodInstManager},
  		    prod_inst_date = #{prodInstDate},
  		    prod_inst_sdate = #{prodInstSdate},
  		    prod_inst_edate = #{prodInstEdate}
  		where prod_inst_code = #{prodInstCode}
  	</update>
  	
  	<update id="updateDtProdInst" parameterType="ProdVO">
  		update dt_prod_inst
  		set prod_inst_rank = #{prodInstRank},
  		    prod_inst_cnt = #{prodInstCnt}
  		where dt_prod_inst_code = #{dtProdInstCode}
  	</update>
  	
  	<delete id="deleteProdInst" parameterType="ProdVO">
  		delete from prod_inst
  		where prod_inst_code = #{prodInstCode}
  	</delete>
  	
  	<delete id="deleteDtProdInst" parameterType="ProdVO">
  		delete from dt_prod_inst
  		where dt_prod_inst_code = #{dtProdInstCode}
  	</delete>
  	<!-- 생산지시조회 -->
  	<select id="selectGetDtInst" resultType="ProdVO">
  		select p.prod_inst_code , d.dt_prod_inst_code , p.prod_plan_code , p.prod_inst_name , d.prdt_code , pt.prdt_name, d.prod_inst_cnt , d.prod_inst_rank , d.prod_inst_yn , p.prod_inst_edate , p.prod_inst_sdate
		  from dt_prod_inst d join prod_inst p 
                on d.prod_inst_code  = p.prod_inst_code
                join prdt_table pt
                on d.prdt_code = pt.prdt_code
         <where>
			<if test="prodInstCode != null and !prodInstCode.equals('')">
				p.prod_inst_code like '%' || #{prodInstCode} || '%'
			</if> 
			<if test="prdtName != null and !prdtName.equals('')">
				or pt.prdt_name like '%' || #{prdtName} || '%'
			</if>
		</where>
		order by p.prod_inst_date desc
  	</select>
  	<!-- 키오스크 :생산지시불러오기 -->
  	<select id="selectGetProcess" resultType="ProdVO">
  		select d.dt_prod_inst_code , d.prdt_code , pt.prdt_name , p.prcs_num , p.prdt_total , pi.prod_inst_edate 
		  from dt_prod_inst d join process p
                        on d.dt_prod_inst_code = p.dt_prod_inst_code
                    join prod_inst pi
                        on pi.prod_inst_code = d.prod_inst_code
                    join prdt_table pt
                        on pt.prdt_code = d.prdt_code
           where p.prdt_total != p.prdt_prod_cnt 
  	</select>
  	
  	
  </mapper>