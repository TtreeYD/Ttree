<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.smartree.mdm.mapper.MdmMapper">

	<!-- 공통코드 리스트 -->
	<select id="selectCommonCode" resultType="CommonCodeVO">
		SELECT code_type, type_name
		FROM common_code
		ORDER BY code_type
	</select>

	<!-- 코드상세 리스트 -->
	<select id="selectCodeDetail" resultType="CommonCodeVO">
		SELECT code_id
		, code_name
		, code_use
		FROM code_detail
		WHERE code_type = #{codeType}
		ORDER BY code_id
	</select>

	<!-- 코드상세 리스트 -->
	<select id="selectCodeDetailY" resultType="CommonCodeVO">
		SELECT code_id
		, code_name
		, code_use
		FROM code_detail
		WHERE code_type = #{codeType}
		AND code_use = 'Y'
		ORDER BY code_id
	</select>

	<!-- 공통코드 입력 -->
	<insert id="insertCommonCode" parameterType="CommonCodeVO" statementType="CALLABLE">
		{call in_up_common_code(
			#{codeType},
			#{typeName}
		)}
	</insert>

	<!-- 상세코드 입력 -->
	<insert id="insertCodeDetail" parameterType="CommonCodeVO" statementType="CALLABLE">
		{call in_up_code_detail(
			#{codeId},
			#{codeName},
			#{codeType},
			#{codeUse}
		)}
	</insert>

	<!-- 공통코드삭제 -->
	<delete id="deleteCommonCode">
		DELETE common_code
		WHERE code_type = #{codeType}
	</delete>
	
	<!-- 상세코드삭제 -->
	<delete id="deleteCodeDetail" parameterType="CommonCodeVO">
		DELETE code_detail
		WHERE code_id = #{codeId}
		AND code_type = #{codeType}
	</delete>
	
	<!-- 사원 리스트 -->
	<select id="selectEmpList" resultType="EmpVO">
		SELECT 	emp_id,
				   emp_name,
				   get_common(emp_dept, '001') emp_dept,
				   emp_class,
				   emp_phone
		FROM emp_list
		<where>
			<if test="empDept !=null and !empDept.equals('')">
				emp_dept = #{empDept}
			</if>
			<if test="empName !=null and !empName.equals('')">
				AND emp_name LIKE '%'||#{empName}||'%'
			</if>
		</where>
		ORDER BY emp_dept, emp_id
	</select>

	<!-- 사원 등록 -->
	<insert id="addEmp" parameterType="EmpVO">
		<selectKey keyProperty="empId" resultType="String" order="BEFORE">
			SELECT #{empDept} || NVL( LPAD( MAX(SUBSTR(emp_id, 5)) +1, 4, '0'), '0001')
			FROM emp_list
			WHERE emp_dept = #{empDept}			
		</selectKey>
			INSERT INTO emp_list(emp_id, emp_pw, emp_name, emp_dept, emp_class, emp_phone)
			values(
					#{empId}
					, #{empPw}
					, #{empName}
					, #{empDept}
					, #{empClass}
					, #{empPhone}
					)
	</insert>
	<!-- 비밀번호 초기화  -->
	<update id="resetPw" parameterType="EmpVO">
		UPDATE emp_list
		SET	 emp_pw = #{empPw}
		WHERE	 emp_id = #{empId}
	</update>
	
	<!-- 사원id 단건조회 -->
	<select id="selectEmp" parameterType="EmpVO">
		SELECT emp_id,
			   emp_name,
			   emp_dept,
			   emp_class,
			   emp_pw,
			   emp_phone,
			   'ROLE_'||UPPER(emp_dept) emp_auth
		FROM   emp_list
		WHERE emp_id = #{empId}
	</select>
	
	
	<!-- 사원pw 변경 -->
	<update id="updatePassword" parameterType="EmpVO">
		UPDATE emp_list
		SET	 emp_pw = #{empPw}
		WHERE	 emp_id = #{empId}
	</update>
	
	
	<!-- 제품관리 -->
	<!-- 제품 리스트 -->
	<select id="selectPrdtList">
		SELECT prdt_code, prdt_name, get_common(prdt_type, '010') prdt_type, prdt_ss, prdt_use
		FROM prdt_table
		ORDER BY prdt_code
	</select>
	
	<!-- 제품검색 -->
	<select id="searchPrdt" resultType="MdmPrdtVO" parameterType="MdmPrdtVO">
		SELECT prdt_code, prdt_name, get_common(prdt_type, '010') prdt_type, prdt_ss, prdt_use
		FROM prdt_table
		<where>
			<if test="prdtName != null and !prdtName.equals('')">
				prdt_name LIKE '%' || #{prdtName} || '%'
			</if>
			<if test="prdtType != null and !prdtType.equals('')">
				and prdt_type = #{prdtType}
			</if>			
		</where>
		ORDER BY prdt_code
	</select>
	
	<!-- 제품 단건조회 -->
	<select id="selectPrdt" resultType="MdmPrdtVO">
		SELECT prdt_code, prdt_name, prdt_type, prdt_ss, prdt_size, prdt_use
		FROM prdt_table
		WHERE prdt_code = #{prdtCode}
	</select>
	
	<!-- 제품 등록 -->
	<insert id="insertPrdt" parameterType="MdmPrdtVO">
		<selectKey keyProperty="prdtCode" order="BEFORE" resultType="String">
			SELECT #{prdtType} || NVL( LPAD( MAX( SUBSTR( prdt_code, 5)) +1, 4, '0'), '0001')
			FROM prdt_table
			WHERE prdt_type = #{prdtType}
		</selectKey>
		INSERT INTO prdt_table(prdt_code, prdt_name, prdt_type, prdt_ss, prdt_size)
		VALUES(#{prdtCode}, #{prdtName}, #{prdtType}, #{prdtSs}, #{prdtSize})
	</insert>
	
	<!-- 제품 수정 -->
	<update id="updatePrdt" parameterType="MdmPrdtVO">
		UPDATE prdt_table
		SET prdt_name = #{prdtName},
			 prdt_type = #{prdtType},
			 prdt_ss = #{prdtSs},
			 prdt_size = #{prdtSize}
		WHERE prdt_code = #{prdtCode}
	</update>
	
	<!-- 제품 삭제 -->
	<delete id="deletePrdt">
		DELETE prdt_table
		WHERE prdt_code = #{prdtCode}
	</delete>
	
	<!-- 자재관리 -->
	<!-- 자재 리스트 -->
	<select id="selectMtlList">
		SELECT mtl_code, mtl_name, get_common(mtl_type, '003') mtl_type, mtl_ss, mtl_use, mtl_unit
		FROM mtl_table
		ORDER BY mtl_code
	</select>
	
	<!-- 자재검색 -->
	<select id="searchMtl" resultType="MdmMtlVO" parameterType="MdmMtlVO">
		SELECT mtl_code, mtl_name, get_common(mtl_type, '003') mtl_type, mtl_ss, mtl_use, mtl_unit
		FROM mtl_table
		<where>
			<if test="mtlName != null and !mtlName.equals('')">
				mtl_name LIKE '%' || #{mtlName} || '%'
			</if>
			<if test="mtlType != null and !mtlType.equals('')">
				and mtl_type = #{mtlType}
			</if>			
		</where>
		ORDER BY mtl_code
	</select>
	
	<!-- 자재 단건조회 -->
	<select id="selectMtl" resultType="MdmMtlVO">
		SELECT mtl_code, mtl_name, mtl_type, mtl_ss, mtl_unit, mtl_use
		FROM mtl_table
		WHERE mtl_code = #{mtlCode}
	</select>
	
	<!-- 자재 등록 -->
	<insert id="insertMtl" parameterType="MdmMtlVO">
		<selectKey keyProperty="mtlCode" order="BEFORE" resultType="String">
			SELECT #{mtlType} || NVL( LPAD( MAX( SUBSTR( mtl_code, 5)) +1, 4, '0'), '0001')
			FROM mtl_table
			WHERE mtl_type = #{mtlType}
		</selectKey>
		INSERT INTO mtl_table(mtl_code, mtl_name, mtl_type, mtl_ss, mtl_unit)
		VALUES(#{mtlCode}, #{mtlName}, #{mtlType}, #{mtlSs}, #{mtlUnit})
	</insert>
	
	<!-- 자재 수정 -->
	<update id="updateMtl" parameterType="MdmMtlVO">
		UPDATE mtl_table
		SET mtl_name = #{mtlName},
			 mtl_type = #{mtlType},
			 mtl_ss = #{mtlSs},
			 mtl_unit = #{mtlUnit},
			 mtl_use = #{mtlUse}
		WHERE mtl_code = #{mtlCode}
	</update>
	
	<!-- 자재 삭제 -->
	<delete id="deleteMtl">
		DELETE mtl_table
		WHERE mtl_code = #{mtlCode}
	</delete>
	
	<!-- 거래처관리 -->
	<!-- 거래처 리스트 -->
	<select id="selectBpList">
		SELECT bp_code, bp_name, get_common(bp_type, '005') bp_type, bp_main, bp_tell
		FROM business_partner
		ORDER BY bp_code
	</select>
	
	<!-- 거래처검색 -->
	<select id="searchBp" resultType="MdmBpVO" parameterType="MdmBpVO">
		SELECT bp_code, bp_name, get_common(bp_type, '005') bp_type, bp_main, bp_tell
		FROM business_partner
		<where>
			<if test="bpName != null and !bpName.equals('')">
				bp_name LIKE '%' || #{bpName} || '%'
			</if>
			<if test="bpType != null and !bpType.equals('')">
				and bp_type = #{bpType}
			</if>			
		</where>
		ORDER BY bp_code
	</select>
	
	<!-- 거래처 단건조회 -->
	<select id="selectBp" resultType="MdmBpVO">
		SELECT bp_code, bp_name, bp_type, bp_main, bp_tell
		FROM business_partner
		WHERE bp_code = #{bpCode}
	</select>
	
	<!-- 거래처 등록 -->
	<insert id="insertBp" parameterType="MdmBpVO">
		<selectKey keyProperty="bpCode" order="BEFORE" resultType="String">
			SELECT #{bpType} || NVL( LPAD( MAX( SUBSTR( bp_code, 5)) +1, 4, '0'), '0001')
			FROM business_partner
			WHERE bp_type = #{bpType}
		</selectKey>
		INSERT INTO business_partner(bp_code, bp_name, bp_type, bp_main, bp_tell)
		VALUES(#{bpCode}, #{bpName}, #{bpType}, #{bpMain}, #{bpTell})
	</insert>
	
	<!-- 거래처 수정 -->
	<update id="updateBp" parameterType="MdmBpVO">
		UPDATE business_partner
		SET bp_name = #{bpName},
			 bp_type = #{bpType},
			 bp_main = #{bpMain},
			 bp_tell = #{bpTell}
		WHERE bp_code = #{bpCode}
	</update>
	
	<!-- 거래처 삭제 -->
	<delete id="deleteBp">
		DELETE business_partner
		WHERE bp_code = #{bpCode}
	</delete>
	
	
	<!-- 공정관리 -->
	<!-- 공정 리스트 -->
	<select id="selectPrcsList">
		SELECT prcs_std_code, prcs_name, get_common(prcs_type, '012') prcs_type, prcs_note
		FROM prcs_table
		ORDER BY prcs_std_code
	</select>
	
	<!-- 공정검색 -->
	<select id="searchPrcs" resultType="MdmPrcsVO" parameterType="MdmPrcsVO">
		SELECT prcs_std_code, prcs_name, get_common(prcs_type, '012') prcs_type, prcs_note
		FROM prcs_table
		<where>
			<if test="prcsName != null and !prcsName.equals('')">
				prcs_name LIKE '%' || #{prcsName} || '%'
			</if>
			<if test="prcsType != null and !prcsType.equals('')">
				and prcs_type = #{prcsType}
			</if>			
		</where>
		ORDER BY prcs_std_code
	</select>
	
	<!-- 공정 단건조회 -->
	<select id="selectPrcs" resultType="MdmPrcsVO">
		SELECT prcs_std_code, prcs_name, prcs_type, prcs_note, prcs_detail
		FROM prcs_table
		WHERE prcs_std_code = #{prcsStdCode}
	</select>
	
	<!-- 공정 등록 -->
	<insert id="insertPrcs" parameterType="MdmPrcsVO">
		<selectKey keyProperty="prcsCode" order="BEFORE" resultType="String">
			SELECT #{prcsType} || NVL( LPAD( MAX( SUBSTR( prcs_std_code, 5)) +1, 4, '0'), '0001')
			FROM prcs_table
			WHERE prcs_type = #{prcsType}
		</selectKey>
		INSERT INTO prcs_table(prcs_std_code, prcs_name, prcs_type, prcs_note, prcs_detail)
		VALUES(#{prcsStdCode}, #{prcsName}, #{prcsType}, #{prcsNote}, #{prcsDetail})
	</insert>
	
	<!-- 공정 수정 -->
	<update id="updatePrcs" parameterType="MdmPrcsVO">
		UPDATE prcs_table
		SET prcs_name = #{prcsName},
			 prcs_type = #{prcsType},
			 prcs_note = #{prcsNote},
			 prcs_detail = #{prcsDetail}
		WHERE prcs_std_code = #{prcsStdCode}
	</update>
	
	<!-- 공정 삭제 -->
	<delete id="deletePrcs">
		DELETE prcs_table
		WHERE prcs_std_code = #{prcsStdCode}
	</delete>
	
	<!-- 품질검사관리 -->
	<!-- 품질검사 리스트 -->
	<select id="selectChkList">
		SELECT chk_std_code, chk_name, chk_dt, chk_std, chk_unit
		FROM chk_std
		ORDER BY chk_std_code
	</select>
	
	<!-- 품질검사검색 -->
	<select id="searchChk" resultType="MdmChkVO" parameterType="MdmChkVO">
		SELECT chk_std_code, chk_name, chk_std, chk_unit
		FROM chk_std
		<where>
			<if test="chkName != null and !chkName.equals('')">
				chk_name LIKE '%' || #{chkName} || '%'
			</if>
			<if test="chkDt != null and !chkDt.equals('')">
				and chk_dt = #{chkDt}
			</if>			
		</where>
		ORDER BY chk_std_code
	</select>
	
	<!-- 품질검사 단건조회 -->
	<select id="selectChk" resultType="MdmChkVO">
		SELECT chk_std_code, chk_name, chk_dt, chk_std, chk_unit
		FROM chk_std
		WHERE chk_std_code = #{chkStdCode}
	</select>
	
	<!-- 품질검사 등록 -->
	<insert id="insertChk" parameterType="MdmChkVO">
		<selectKey keyProperty="chkCode" order="BEFORE" resultType="String">
			SELECT #{chkDt} || NVL( LPAD( MAX( SUBSTR( chk_std_code, 5)) +1, 4, '0'), '0001')
			FROM chk_std
			WHERE chk_dt = #{chkDt}
		</selectKey>
		INSERT INTO chk_std(chk_std_code, chk_name, chk_dt, chk_std, chk_unit)
		VALUES(#{chkStdCode}, #{chkName}, #{chkDt}, #{chkStd}, #{chkUnit})
	</insert>
	
	<!-- 품질검사 수정 -->
	<update id="updateChk" parameterType="MdmChkVO">
		UPDATE chk_std
		SET chk_name = #{chkName},
			 chk_dt = #{chkDt},
			 chk_std = #{chkStd},
			 chk_unit = #{chkUnit}
		WHERE chk_std_code = #{chkStdCode}
	</update>
	
	<!-- 품질검사 삭제 -->
	<delete id="deleteChk">
		DELETE chk_std
		WHERE chk_std_code = #{chkStdCode}
	</delete>
	
	<!-- BOM관리 -->
	<!-- BOM 리스트조회 -->
	<select id="selectBomList" resultType="MdmBomVO">
		SELECT bom_code, bom_date, get_use(bom_use) bom_use
		FROM bom_table
		WHERE prdt_code = #{prdtCode}
	</select>
	
	<!-- BOM 상세조회 -->
	<select id="selectBomDetail" resultType="MdmBomVO">
		SELECT bd.*, pc.prcs_name, m.mtl_unit, m.mtl_name
		FROM bom_detail bd
		JOIN prcs_table pc ON bd.prcs_std_code = pc.prcs_std_code
		LEFT OUTER JOIN mtl_table m ON m.mtl_code = bd.mtl_code
		WHERE bom_code = 
						<choose>
							<when test="bomCode !=null and !bomCode.equals('')">
								#{bomCode}
							</when>
							<otherwise>
							  (SELECT bom_code
		                  FROM bom_table
		                  WHERE prdt_code = #{prdtCode}
		                 	AND bom_use = 'Y'
		                 )
							</otherwise>
						</choose>
		ORDER BY prcs_order
	</select>
	<!-- 사용여부 변경 -->
	<update id="updateBom" parameterType="MdmBomVO">
		{call update_bom(
			#{prdtCode},
			#{bomCode}
		)}
	</update>
	
	<!-- BOM등록 -->
	<insert id="insertBom" parameterType="MdmBomVO">
		<selectKey keyProperty="bomCode" order="BEFORE" resultType="String">
			SELECT 'BOM' || NVL(LPAD(MAX(SUBSTR(bom_code,4)+1),5,'0'),'00001') FROM bom_table
		</selectKey>
		INSERT INTO bom_table(bom_code, prdt_code)
		VALUES (#{bomCode}, #{prdtCode})		
	</insert>
	
	<!-- BOM삭제 -->
		
	<!-- BOM상세 등록 -->
	<insert id="insertBomDt" parameterType="MdmBomVO">
		INSERT INTO bom_detail(prcs_order, bom_code, prcs_std_code, mtl_code, mtl_cnt)
		VALUES(
					#{prcsOrder}
					, #{bomCode}
					, #{prcsStdCode}
					, NVL(#{mtlCode},'00000000')
					, #{mtlCnt}
				)
	</insert>
	<delete id="deleteBomDt" parameterType="MdmBomVO">
		DELETE bom_detail
		WHERE bom_code = #{bomCode}
	</delete>
	
	
</mapper>